{"version":3,"sources":["script.js"],"names":["darkRadioButton","document","getElementById","lightRadioButton","getColorMode","console","log","localStorage","getItem","setDarkMode","click","setLightMode","querySelector","classList","getSystemPrefColorMode","window","matchMedia","matches","checkSystemPrefThemeChanges","addEventListener","event","radioButtons","querySelectorAll","_loop","i","checked","setItem","length"],"mappings":"AAAA,aAEA,IAAMA,gBAAkBC,SAASC,eAAe,QAC1CC,iBAAmBF,SAASC,eAAe,SAM3CE,aAAe,WACjBC,QAAQC,IAAI,kBACZD,QAAQC,IAAIC,aAAaC,QAAQ,cACS,SAAtCD,aAAaC,QAAQ,cACrBC,cACAT,gBAAgBU,SAE2B,UAAtCH,aAAaC,QAAQ,eAC1BG,eACAR,iBAAiBO,QAEzB,EAEMD,YAAc,WAChBJ,QAAQC,IAAI,iBACZL,SAASW,cAAc,QAAQC,UAAY,MAC/C,EACMF,aAAe,WACjBN,QAAQC,IAAI,kBACZL,SAASW,cAAc,QAAQC,UAAY,OAC/C,EAIMC,uBAAyB,WACbT,QAAQC,IAAIS,OAAOC,WAAW,gCAAgCC,SAC7DZ,QAAQC,IAAIS,OAAOC,WAAW,iCAAiCC,SACpC,OAAtCV,aAAaC,QAAQ,eACjBO,OAAOC,WAAW,gCAAgCC,QAClDjB,gBAAgBU,QAEXK,OAAOC,WAAW,kCAAkCC,SACzDd,iBAAiBO,QAG7B,EAGMQ,4BAA8B,WAChCb,QAAQC,IAAI,wBACZS,OAAOC,WAAW,gCAAgCG,iBAAiB,UAAU,SAACC,GAC1EN,wBACJ,GACJ,EAEAV,eAEAU,yBACAI,8BAOA,IADA,IAAMG,aAAepB,SAASqB,iBAAiB,0BAA0BC,MAAA,SAAAC,GAIrEH,aAAaG,GAAGL,iBAAiB,SAAS,SAAAC,GACtCf,QAAQC,IAAI,wBACZD,QAAQC,IAAIkB,GAGRxB,gBAAgByB,SAEhBlB,aAAamB,QAAQ,YAAa,QAClCjB,gBAMAF,aAAamB,QAAQ,YAAa,SAClCf,eAGR,GACJ,EAtBSa,EAAI,EAAGA,EAAIH,aAAaM,OAAQH,IAAGD,MAAAC","file":"script.js","sourcesContent":["\r\n// Creating Variables for Our Radio Inputs to Reuse & Avoid Code Duplication\r\nconst darkRadioButton = document.getElementById('dark');\r\nconst lightRadioButton = document.getElementById('light');\r\n\r\n\r\n\r\n\r\n// getting the Local Storage Value(Function to get the ColorMode) On Page Refresh;\r\nconst getColorMode = () => {\r\n    console.log('Get Color Mode');\r\n    console.log(localStorage.getItem('colorMode'));\r\n    if (localStorage.getItem('colorMode') === 'dark') {\r\n        setDarkMode();\r\n        darkRadioButton.click();\r\n    }\r\n    else if (localStorage.getItem('colorMode') === 'light') {\r\n        setLightMode();\r\n        lightRadioButton.click();\r\n    }\r\n}\r\n\r\nconst setDarkMode = () => {\r\n    console.log(\"Set Dark Mode\");\r\n    document.querySelector('body').classList = 'dark';\r\n}\r\nconst setLightMode = () => {\r\n    console.log(\"Set Light Mode\");\r\n    document.querySelector('body').classList = 'light';\r\n}\r\n\r\n\r\n// Method For Detecting System Preference Color Theme & Position the Toggle Based on That\r\nconst getSystemPrefColorMode = () => {\r\n    const query = console.log(window.matchMedia(\"(prefers-color-scheme: dark)\").matches);\r\n    const query1 = console.log(window.matchMedia(\"(prefers-color-scheme: light)\").matches);\r\n    if (localStorage.getItem('colorMode') === null) {\r\n        if (window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\r\n            darkRadioButton.click();\r\n        }\r\n        else if (window.matchMedia(\"(prefers-colors-scheme: light)\").matches) {\r\n            lightRadioButton.click();\r\n        }\r\n    }\r\n}\r\n\r\n// Function to Check & Handle System Pref Theme Changes While Using Website\r\nconst checkSystemPrefThemeChanges = () => {\r\n    console.log(\"Check System Changes\");\r\n    window.matchMedia(\"(prefers-color-scheme: dark)\").addEventListener('change', (event) => {\r\n        getSystemPrefColorMode();\r\n    })\r\n}\r\n// Execute the Local Storage Function Upon Page Refresh\r\ngetColorMode();\r\n// Function for identifying system preference color theme\r\ngetSystemPrefColorMode();\r\ncheckSystemPrefThemeChanges();\r\n\r\n\r\n\r\n\r\n// Get the radiobutton inputs in my toggle wrapper class\r\nconst radioButtons = document.querySelectorAll('.toggle__wrapper input');\r\nfor (let i = 0; i < radioButtons.length; i++) {\r\n    // Click event on the radio buttons\r\n    // Triggering a Click event for each element \r\n    radioButtons[i].addEventListener('click', event => {\r\n        console.log(\"Radio Button Clicked\");\r\n        console.log(i);\r\n        // Handling JS Logic For Dark/Light Mode Switch\r\n        // When dark theme is selected\r\n        if (darkRadioButton.checked) {\r\n            // Local Storage for saving the theme on Refresh of page\r\n            localStorage.setItem('colorMode', 'dark');\r\n            setDarkMode();\r\n\r\n        }\r\n        // When light theme is selected\r\n        else {\r\n            // Local Storage for saving the theme on Refresh of page\r\n            localStorage.setItem('colorMode', 'light');\r\n            setLightMode();\r\n\r\n        }\r\n    })\r\n}\r\n"]}